name: Build

on: [push, pull_request]

jobs:
  coredhcp:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go: ['1.22', '1.23']
    steps:
      - uses: actions/checkout@v4
        with:
          # clone in the gopath
          path: src/github.com/${{ github.repository }}
      - uses: actions/setup-go@v5
        with:
          stable: false
          go-version: ${{ matrix.go }}
      - name: setup environment
        run: |
          # `env` doesn't allow for variable expansion, so we use the GITHUB_ENV
          # trick.
          echo "GOPATH=$GITHUB_WORKSPACE" >> $GITHUB_ENV
          echo "GO111MODULE=on" >> $GITHUB_ENV
      - name: build coredhcp
        run: |
          set -exu
          cd $GITHUB_WORKSPACE/src/github.com/${{ github.repository }}/cmds/coredhcp
          go build
      - uses: actions/upload-artifact@v4
        with:
          name: coredhcp-${{ matrix.go }}
          path: src/github.com/${{ github.repository }}/cmds/coredhcp/coredhcp
          if-no-files-found: error
  coredhcp-docker:
    runs-on: ubuntu-latest
    needs: coredhcp
    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Log in to GitHub Container Registry
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Step 3: Extract version from the tag
      - name: Extract version from tag
        id: version
        run: echo "VERSION=${GITHUB_REF##*/}" >> $GITHUB_ENV

      # Step 4: Build the Docker image
      - name: Build Docker image
        run: |
          docker build \
            -t ghcr.io/${{ github.repository_owner }}/coredhcp:${{ env.VERSION }} \
            -t ghcr.io/${{ github.repository_owner }}/coredhcp:latest .

      # Step 5: Push the Docker image
      - name: Push Docker image
        run: |
          docker push ghcr.io/${{ github.repository_owner }}/coredhcp:${{ env.VERSION }}
          docker push ghcr.io/${{ github.repository_owner }}/coredhcp:latest
  coredhcp-generator:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go: ['1.22', '1.23']
    steps:
      - uses: actions/checkout@v4
        with:
          # clone in the gopath
          path: src/github.com/${{ github.repository }}
      - uses: actions/setup-go@v5
        with:
          stable: false
          go-version: ${{ matrix.go }}
      - name: setup environment
        run: |
          # `env` doesn't allow for variable expansion, so we use the GITHUB_ENV
          # trick.
          echo "GOPATH=$GITHUB_WORKSPACE" >> $GITHUB_ENV
          echo "GOBIN=$GITHUB_WORKSPACE/bin" >> $GITHUB_ENV
      - name: build coredhcp-generator
        run: |
          set -exu
          cd "${GITHUB_WORKSPACE}"/src/github.com/${{ github.repository }}/cmds/coredhcp-generator
          go build
          builddir=$(./coredhcp-generator -f core-plugins.txt)
          cd "${builddir}"
          ls -l
          go mod init "coredhcp"
          go mod edit -replace "github.com/coredhcp/coredhcp=${GITHUB_WORKSPACE}/src/github.com/${{ github.repository }}"
          go mod tidy
          go build
          gofmt -w "${builddir}/coredhcp.go"
          diff -u "${builddir}/coredhcp.go" "${GITHUB_WORKSPACE}"/src/github.com/${{ github.repository }}/cmds/coredhcp/main.go